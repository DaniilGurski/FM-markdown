@use "colors"    as *;
@use "typography" as *;
@use "functions" as *;
@use "sizes" as *;
@use "sass:math";


// Add min-width media query
@mixin mq-min($min-breakpoint) {
    @media (min-width: em($min-breakpoint)) {
        @content;
    }
}


@mixin mq-max($max-breakpoint) {
    @media (max-width: em($max-breakpoint)) {
        @content;
    }
}


// Convert color map either into css custom properties
@mixin convert_colors($color-map) {
    @each $role, $shades in $color-map {

        @each $lightness, $color in $shades {
            --clr-#{$role}-#{$lightness}: #{$color};
        }
    }
}


// Convert map with typography related values either into css custom properties 
@mixin convert_typography($typescales) {    
    @each $screen-size, $typescale in $typescales {
            
        @if $screen-size == "large" {
            @include mq-min(0) {
                @each $scale, $value in $typescale {
                    --fs-#{$scale}: #{$value};
                }
            }

        } @else {
            @each $scale, $value in $typescale {
                --fs-#{$scale}: #{$value};
            }
        }
    }
}


// Quick access to gap proprety for different situations
@mixin flex($gap: 1rem) {
    display: flex;

    @if type-of($gap) == string{
        @error "Use unitless integer value or rem";
    }

    @if math.is-unitless($gap) {
        gap: rem($gap);
    } @else {
        gap: $gap;
    }
}


@mixin grid($gap: 1rem) {
    display: grid;
    gap: $gap;
}


// Basic list 
@mixin list($row: "false", $item-gap: 1rem, $off-markers: "false") {
    margin: 0;
    padding: 0;

    @if $row == "true" {
        @include flex($item-gap);
    } @else {
        @include grid($item-gap);
    }

    @if $off-markers == "true" {
        list-style-type: none;
    }
}


// Basic heading 
@mixin heading($font-size, $font-weight, $color: black) {
    font-size: $font-size; 
    font-weight: $font-weight;
    color: $color;
}


// Set appearence to none for custom styling
@mixin reset_appearence() {
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
}

